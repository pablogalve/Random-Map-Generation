#include "Procedural_Map_Gen.h"
#include "j1App.h"
#include "j1Map.h"
#include "p2Log.h"

Procedural_Map_Gen::Procedural_Map_Gen()
{
	
}

Procedural_Map_Gen::~Procedural_Map_Gen()
{
}

int Procedural_Map_Gen::generateSeed() {
	//TODO
	/*
		Generate a new seed
		Seeds are usually created using current time in milliseconds
	*/

	//Returns current time in milliseconds
	//We'll use that as a seed
	msec = time(NULL) * 1000;

	return msec;
}

void Procedural_Map_Gen::generatePerlinNoise() {
	//We use always the same seed
	generatePerlinNoise(1337);
}

void Procedural_Map_Gen::generatePerlinNoise(unsigned int seed)
{
	//TODO
	//Create a new FastNoise object
	FastNoise myNoise; // Create a FastNoise object

	//Default noise type is Simplex
	//But we need Perlin Noise
	myNoise.SetNoiseType(FastNoise::Perlin); // Set the desired noise type
		
	myNoise.SetSeed(seed);
	myNoise.SetFrequency(0.05); //Default: 0:01

	/*We need to store values generated by Perlin Noise 
	in a variable that is inside App->map
	*/
	for (int x = 0; x < 100; x++)
	{
		for (int y = 0; y < 100; y++)
		{
			//We have to ensure that noise is always between 0 and 1
			App->map->height_map[x][y] = (myNoise.GetNoise(x, y) + 1) * 0.5;

			LOG("Noise: %f", App->map->height_map[x][y]);
		}
	}
}